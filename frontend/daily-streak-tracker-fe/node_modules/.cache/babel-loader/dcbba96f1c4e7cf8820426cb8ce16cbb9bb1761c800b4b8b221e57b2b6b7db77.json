{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhay\\\\dailyStreakTracker\\\\dailyStreakTracker\\\\frontend\\\\daily-streak-tracker-fe\\\\src\\\\components\\\\Heatmap\\\\heatmap.js\";\nimport \"./heatmap.css\";\n// import Calendar from \"react-calendar\";\n// import \"react-calendar/dist/Calendar.css\";\nimport { HeatMapGrid } from \"react-grid-heatmap\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Heatmap() {\n  const xLabels = new Array(24).fill(0).map((_, i) => `${i}`);\n  const yLabels = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\"];\n  const data = new Array(yLabels.length).fill(0).map(() => new Array(xLabels.length).fill(0).map(() => Math.floor(Math.random() * 50 + 50)));\n\n  // const [date, setDate] = useState(new Date());\n  // const streakData = [\n  //     false, false, false, true, true, true, true, true, true, false, true, true,\n  //     true, true, true, false, false, false, true, true, true, true, true, true,\n  //     true, true, true, true, true, true,\n  //   ];\n\n  // function handleClick(value){\n  //     console.log(value);\n  //     alert('New date is: '+ value)\n  // }\n\n  // function getTileContent({date, view}){\n  //     if(view === 'month'){\n  //         const day = date.getDate();\n  //         const isCompleted = streakData[day-1];\n\n  //         return (\n  //           <div>\n  //             {isCompleted ? (\n  //               <div className=\"react-calendar__tile\" style={{backgroundColor: \"#000000\" }}>\n\n  //               </div>\n  //             ) : null}\n  //           </div>\n  //         );\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"heatmap\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"name\",\n      children: \"Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeatMapGrid, {\n      data: data,\n      xLabels: xLabels,\n      yLabels: yLabels\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_c = Heatmap;\nvar _c;\n$RefreshReg$(_c, \"Heatmap\");","map":{"version":3,"names":["HeatMapGrid","useState","jsxDEV","_jsxDEV","Heatmap","xLabels","Array","fill","map","_","i","yLabels","data","length","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/abhay/dailyStreakTracker/dailyStreakTracker/frontend/daily-streak-tracker-fe/src/components/Heatmap/heatmap.js"],"sourcesContent":["import \"./heatmap.css\";\r\n// import Calendar from \"react-calendar\";\r\n// import \"react-calendar/dist/Calendar.css\";\r\nimport { HeatMapGrid } from \"react-grid-heatmap\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Heatmap() {\r\n  const xLabels = new Array(24).fill(0).map((_, i) => `${i}`);\r\n  const yLabels = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\"];\r\n  const data = new Array(yLabels.length)\r\n    .fill(0)\r\n    .map(() =>\r\n      new Array(xLabels.length)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * 50 + 50))\r\n    );\r\n\r\n  // const [date, setDate] = useState(new Date());\r\n  // const streakData = [\r\n  //     false, false, false, true, true, true, true, true, true, false, true, true,\r\n  //     true, true, true, false, false, false, true, true, true, true, true, true,\r\n  //     true, true, true, true, true, true,\r\n  //   ];\r\n\r\n  // function handleClick(value){\r\n  //     console.log(value);\r\n  //     alert('New date is: '+ value)\r\n  // }\r\n\r\n  // function getTileContent({date, view}){\r\n  //     if(view === 'month'){\r\n  //         const day = date.getDate();\r\n  //         const isCompleted = streakData[day-1];\r\n\r\n  //         return (\r\n  //           <div>\r\n  //             {isCompleted ? (\r\n  //               <div className=\"react-calendar__tile\" style={{backgroundColor: \"#000000\" }}>\r\n\r\n  //               </div>\r\n  //             ) : null}\r\n  //           </div>\r\n  //         );\r\n  //     }\r\n  // }\r\n\r\n  return (\r\n    <div className=\"heatmap\">\r\n      <h1 className=\"name\">Tracker</h1>\r\n      <HeatMapGrid data={data} xLabels={xLabels} yLabels={yLabels} />\r\n      {/* <div className=\"calendar\">\r\n        <Calendar \r\n            value={date}\r\n            onChange={() => handleClick(date)}\r\n            tileContent={getTileContent}\r\n            maxDate={date}\r\n        />\r\n      </div> \r\n       */}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAO,eAAe;AACtB;AACA;AACA,SAASA,WAAW,QAAQ,oBAAoB;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAChC,MAAMC,OAAO,GAAG,IAAIC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAM,GAAEA,CAAE,EAAC,CAAC;EAC3D,MAAMC,OAAO,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EAC1D,MAAMC,IAAI,GAAG,IAAIN,KAAK,CAACK,OAAO,CAACE,MAAM,CAAC,CACnCN,IAAI,CAAC,CAAC,CAAC,CACPC,GAAG,CAAC,MACH,IAAIF,KAAK,CAACD,OAAO,CAACQ,MAAM,CAAC,CACtBN,IAAI,CAAC,CAAC,CAAC,CACPC,GAAG,CAAC,MAAMM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAClD,CAAC;;EAEH;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEb,OAAA;IAAKc,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBf,OAAA;MAAIc,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCnB,OAAA,CAACH,WAAW;MAACY,IAAI,EAAEA,IAAK;MAACP,OAAO,EAAEA,OAAQ;MAACM,OAAO,EAAEA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAU5D,CAAC;AAEV;AAACC,EAAA,GAvDuBnB,OAAO;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}